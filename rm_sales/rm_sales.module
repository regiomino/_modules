<?php

/**
* Implements hook_menu().
*/
function rm_sales_menu() {
    $items = array();
    $items['presse'] = array(
        'title' => 'Press',
        'page callback' => 'rm_sales_press',
        'access arguments' => array('access content'),
        'file' => 'rm_sales.inc',
        'file path' => drupal_get_path('module', 'rm_sales'),
    );
    $items['manage/conflate/%'] = array(
        'title' => 'Sales',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('rm_sales_conflate_profiles_form', 2),
        'access callback' => 'rm_sales_user_is_salesguy',
        'file' => 'rm_sales.inc',
        'file path' => drupal_get_path('module', 'rm_sales'),
    );
    $items['manage/sales'] = array(
        'title' => 'Sales',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('rm_sales_profilequeue_form'),
        'access callback' => 'rm_sales_user_is_salesguy',
        'file' => 'rm_sales.inc',
        'file path' => drupal_get_path('module', 'rm_sales'),
        'type' => MENU_NORMAL_ITEM,
    );
	$items['manage/sales/suggested'] = array(
        'title' => '1. Adopt profile suggestions',
        'type' => MENU_DEFAULT_LOCAL_TASK,
        'weight' => 0,
      );
	// $items['manage/sales/assigned'] = array(
    // 'title' => '2. Complete profiles',
    // 'page callback' => 'drupal_get_form',
		// 'page arguments' => array('rm_sales_profileset_form'),
		// 'access callback' => 'rm_sales_user_is_salesguy',
    // 'file' => 'rm_sales.inc',
    // 'file path' => drupal_get_path('module', 'rm_sales'),
    // 'type' => MENU_LOCAL_TASK,
    // 'weight' => 1,
  // );
	$items['manage/sales/manage'] = array(
        'title' => '2. Supervise profiles',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('rm_sales_profilecare_form'),
        'access callback' => 'rm_sales_user_is_salesguy',
        'file' => 'rm_sales.inc',
        'file path' => drupal_get_path('module', 'rm_sales'),
        'type' => MENU_LOCAL_TASK,
        'weight' => 2,
    );
    $items['manage/sales/useraccounts'] = array(
        'title' => 'User accounts',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('rm_sales_useraccounts_form'),
        'access callback' => 'rm_sales_user_is_salesguy',
        'file' => 'rm_sales.inc',
        'file path' => drupal_get_path('module', 'rm_sales'),
        'type' => MENU_LOCAL_TASK,
        'weight' => 3,
    );
  $items['manage/sales/addoffertable/%'] = array(
    'title' => 'Sales',
    'page callback' => 'drupal_get_form',
		'page arguments' => array('rm_sales_offertable_add', 3),
		'access callback' => 'rm_sales_user_is_salesguy',
    'file' => 'rm_sales.inc',
    'file path' => drupal_get_path('module', 'rm_sales'),
  );
  $items['manage/sales/addnote/%'] = array(
    'title' => 'Sales',
    'page callback' => 'drupal_get_form',
		'page arguments' => array('rm_sales_note_add', 3),
		'access callback' => 'rm_sales_user_is_salesguy',
    'file' => 'rm_sales.inc',
    'file path' => drupal_get_path('module', 'rm_sales'),
  );

  $items['manage/sales/assignprofile/%/%'] = array(
    'title' => 'Sales',
    'page callback' => 'rm_sales_assignprofile',
		'page arguments' => array(3,4),
		'access callback' => 'rm_sales_assignprofile_access',
		'access arguments' => array(3,4),
    'file' => 'rm_sales.inc',
    'file path' => drupal_get_path('module', 'rm_sales'),
  );
  $items['manage/sales/changepriority/%/%'] = array(
    'title' => 'Sales',
    'page callback' => 'rm_sales_changepriority',
		'page arguments' => array(3,4),
        'access callback' => 'rm_sales_user_is_salesguy',
    'file' => 'rm_sales.inc',
    'file path' => drupal_get_path('module', 'rm_sales'),
  );
  $items['manage/sales/updatecomment/%'] = array(
    'title' => 'Sales',
    'page callback' => 'rm_sales_updatecomment',
		'page arguments' => array(3),
        'access callback' => 'rm_sales_user_is_salesguy',
    'file' => 'rm_sales.inc',
    'file path' => drupal_get_path('module', 'rm_sales'),
  );
  $items['manage/sales/updatenextaction/%'] = array(
    'title' => 'Sales',
    'page callback' => 'rm_sales_updatenextaction',
		'page arguments' => array(3),
        'access callback' => 'rm_sales_user_is_salesguy',
    'file' => 'rm_sales.inc',
    'file path' => drupal_get_path('module', 'rm_sales'),
  );
    $items['manage/sales/makeprospect/%'] = array(
        'title' => 'Sales',
        'page callback' => 'rm_sales_makeprospect',
        'page arguments' => array(3),
        'access callback' => 'rm_sales_user_is_salesguy',
        'file' => 'rm_sales.inc',
        'file path' => drupal_get_path('module', 'rm_sales'),
    );
    $items['manage/sales/removeprospect/%'] = array(
        'title' => 'Sales',
        'page callback' => 'rm_sales_removeprospect',
        'page arguments' => array(3),
        'access callback' => 'rm_sales_user_is_salesguy',
        'file' => 'rm_sales.inc',
        'file path' => drupal_get_path('module', 'rm_sales'),
    );
  $items['manage/sales/changeprofiletype/%/%'] = array(
    'title' => 'Sales',
    'page callback' => 'rm_sales_changeprofiletype',
		'page arguments' => array(3,4),
		'access callback' => 'rm_sales_user_is_salesguy',
    'file' => 'rm_sales.inc',
    'file path' => drupal_get_path('module', 'rm_sales'),
  );
  $items['manage/sales/%/edit'] = array(
    'title' => 'Sales',
    'page callback' => 'drupal_get_form',
		'page arguments' => array('rm_sales_editprofile', 2),
		'access callback' => 'rm_sales_editprofile_access',
		'access arguments' => array(2),
    'file' => 'rm_sales.inc',
    'file path' => drupal_get_path('module', 'rm_sales'),
  );
  $items['manage/sales/%/delete'] = array(
    'title' => 'Sales',
    'page callback' => 'drupal_get_form',
		'page arguments' => array('rm_sales_deletenode', 2),
		'access callback' => 'rm_sales_deletenode_access',
		'access arguments' => array(2),
    'file' => 'rm_sales.inc',
    'file path' => drupal_get_path('module', 'rm_sales'),
  );
  $items['manage/sales/%/publish'] = array(
    'title' => 'Sales',
    'page callback' => 'rm_sales_publishprofile',
		'page arguments' => array(2),
		'access callback' => 'rm_sales_publishprofile_access',
		'access arguments' => array(2),
    'file' => 'rm_sales.inc',
    'file path' => drupal_get_path('module', 'rm_sales'),
  );
	return $items;
}

function rm_sales_publishprofile_access($nid) {
	$profileobject = node_load($nid);
	global $user;
    if(rm_user_is_admin()) return TRUE;
	if(isset($profileobject->field_salesguy[LANGUAGE_NONE][0]['target_id']) && $profileobject->field_salesguy[LANGUAGE_NONE][0]['target_id'] == $user->uid) return TRUE;
}

function rm_sales_deletenode_access($nid) {
	$object = node_load($nid);
	global $user;
    if($object->type == 'seller_profile' || $object->type == 'customer_profile') {
        if(isset($object->field_salesguy[LANGUAGE_NONE][0]['target_id']) && $object->field_salesguy[LANGUAGE_NONE][0]['target_id'] == $user->uid) return TRUE;
        if(in_array('salesguy', $user->roles) && $object->uid == 0) return TRUE;
    }
    else if($object->type == 'shipping_agreement' || $object->type == 'dispatch_agreement' || $object->type == 'pickup_agreement' || $object->type == 'payment_agreement') {
        if(rm_sales_user_is_salesguy()) return TRUE;
    }
    else {
        if(rm_user_is_admin()) return TRUE;
    }
}

function rm_sales_user_is_salesguy() {
	global $user;
	return in_array('salesguy', $user->roles) ? TRUE : FALSE;
}

function rm_sales_assignprofile_access($nid, $uid) {
	$userobject = user_load($uid);
	if(!in_array('salesguy', $userobject->roles)) return FALSE;
	$nodeobject = node_load($nid);
	if(isset($nodeobject->type) && $nodeobject->type != 'customer_profile' && $nodeobject->type != 'seller_profile') return FALSE;
	return TRUE;
}

/**
 * Implements a form for suggesting participant profiles
 * @return array
 */
function rm_sales_suggest_form($form, &$form_state) {

    $form['suggest']['necessary'] = array(
        '#type' => 'fieldset',
        '#title' => t('These infos we need...'),
    );
	$form['suggest']['necessary']['type'] = array(
		'#type' => 'radios',
		'#title' => t('Vendor or gastronomy'),
		'#options' => array(
			'seller_profile' => t('Suggest vendor'),
			'customer_profile' => t('Suggest gastronomy'),
		),
		'#required' => TRUE,
	);
	
	$form['suggest']['necessary']['title'] = array(
		'#type' => 'textfield',
		'#title' => t('Name of the vendor or gastronomy'),
		'#required' => TRUE,
	);

	$form['suggest']['necessary']['locality'] = array(
		'#type' => 'textfield',
		'#title' => t('City'),
		'#required' => TRUE,
	);

    $form['suggest']['nicetohave'] = array(
        '#type' => 'fieldset',
        '#title' => t('... and these infos are helpful'),
    );
    
    $form['suggest']['nicetohave']['thoroughfare'] = array(
		'#type' => 'textfield',
		'#title' => t('Street'),
		'#required' => FALSE,
	);

    $form['suggest']['nicetohave']['postal_code'] = array(
        '#type' => 'textfield',
        '#title' => t('Postal code'),
        '#required' => FALSE,
    );

	$form['suggest']['nicetohave']['phone'] = array(
		'#type' => 'textfield',
		'#title' => t('Phone'),
		'#required' => FALSE,
	);

	$form['suggest']['nicetohave']['suggester'] = array(
		'#type' => 'textfield',
		'#title' => t('E-Mail of suggester'),
		'#required' => FALSE,
	);

    $form['suggest']['nicetohave']['owner'] = array(
        '#type' => 'checkbox',
        '#title' => t('I am the owner'),
        '#required' => FALSE,
    );

	global $user;
	if($user->uid > 0) {
		$form['suggest']['nicetohave']['suggester']['#default_value'] = $user->mail;
	}

    $form['submit'] = array(
        '#type' => 'submit',
        '#value' => t('Suggest'),
    );
	
	return $form;
}

/**
* Implements hook_mollom_form_list().
*/
function rm_sales_mollom_form_list() {
  $forms['rm_sales_suggest_form'] = array(
    'title' => t('Suggest form'),
  );
  return $forms;
}
/**
* Implements hook_mollom_form_info().
*/
function rm_sales_mollom_form_info() {
  $form_info = array(
    'mode' => MOLLOM_MODE_CAPTCHA,
  );
  return $form_info;
}

/**
 * Validation callback for rm_sales_suggest_form().
 * @param $form
 * @param $form_state
 */
function rm_sales_suggest_form_validate($form, &$form_state) {
	if(!empty($form_state['values']['postal_code'])) {
		if(!is_numeric($form_state['values']['postal_code'])) form_set_error('postal_code', t('Please enter a numeric value as postal code'));
	}
	if(!empty($form_state['values']['phone'])) {
		if(!is_numeric($form_state['values']['phone'])) form_set_error('phone', t('Please enter a numeric value as phone number'));
	}
	
}

/**
 * Submit callback for rm_sales_suggest_form().
 * @param $form
 * @param $form_state
 */
function rm_sales_suggest_form_submit($form, &$form_state) {

    $owner = (!empty($form_state['values']['owner'])) ? 1 : 0;
	$new_node = rm_api_create_new_node(
		$form_state['values']['type'], //Type
		$form_state['values']['title'], //Title
		'de', //Language
		0, //Uid of author
		0, //Status
		0, //Suppressed
		0, //Sticky
		0, //Promote
        $owner //Prospect
	);
	
	//Store fields
	$new_node->field_address[LANGUAGE_NONE][0] = array(
		'country' => 'de',
		'administrative_area' => NULL,
		'sub_administrative_area' => NULL,
		'locality' => '',
		'dependent_locality' => '',
		'postal_code' => '',
		'thoroughfare' => '',
		'premise' => '',
		'sub_premise' => NULL,
		'organisation_name' => '',
		'name_line' => NULL,
		'first_name' => NULL,
		'last_name' => NULL,
		'data' => NULL,
	);
	if(!empty($form_state['values']['locality'])) $new_node->field_address[LANGUAGE_NONE][0]['locality'] = $form_state['values']['locality'];
	if(!empty($form_state['values']['thoroughfare'])) $new_node->field_address[LANGUAGE_NONE][0]['thoroughfare'] = $form_state['values']['thoroughfare'];
	if(!empty($form_state['values']['postal_code'])) $new_node->field_address[LANGUAGE_NONE][0]['postal_code'] = $form_state['values']['postal_code'];
	if(!empty($form_state['values']['phone'])) {
		$new_node->field_publicphone[LANGUAGE_NONE][0]['number'] = $form_state['values']['phone'];
		$new_node->field_publicphone[LANGUAGE_NONE][0]['country_codes'] = 'de';
	}
	
	if(!empty($form_state['values']['suggester'])) $new_node->field_suggester[LANGUAGE_NONE][0]['value'] = $form_state['values']['suggester'];
	
	//if suggester is sales person, then store him in field_salesguy
	$suggester = user_load_by_mail($form_state['values']['suggester']);
	$enteredbysales = FALSE;
	
    if(!empty($suggester)) {
        if(in_array('salesguy', $suggester->roles)) {
            $new_node->field_salesguy[LANGUAGE_NONE][0]['target_id'] = $suggester->uid;
            $enteredbysales = TRUE;
            $new_node->sticky = 1;
        }
    }
    
    $new_node->field_priority[LANGUAGE_NONE][0]['value'] = 9;
    $new_node->field_next_action[LANGUAGE_NONE][0]['value'] = 1924988399;

	node_save($new_node);
	
	if(!$enteredbysales) {
		if(!empty($form_state['values']['suggester'])) {
			drupal_set_message(t('Thank you very much! We will contact @name as soon as possible and let you know when he/she joins us.', array('@name' => $form_state['values']['title'])), 'status');
		}
		else {
			drupal_set_message(t('Thank you very much! We will contact @name as soon as possible.', array('@name' => $form_state['values']['title'])), 'status');
		}
	}
	else {
		drupal_set_message(t('Thank you very much! @name has been entered and assigned to your <a href="@url">sales</a> account.', array('@name' => $form_state['values']['title'], '@url' => 'user/register?destination=manage/sales/assigned')), 'status');
	}
	
	//Log activity
	global $user;
	if($user->uid > 0 && !empty($suggester) && $suggester->uid > 0 && $user->uid != $suggester->uid) {
		rm_user_activity(
			t('Suggested profile <a href="@url">@profile</a> but entered user @targetuser as the suggester', array('@url' => url('node/' . $new_node->nid), '@profile' => $new_node->title, '@targetuser' => $suggester->mail)),
			$new_node->nid,
			'node',
			$user->uid
		);
	}
	elseif($user->uid > 0 && !empty($suggester) && $suggester->uid > 0 && $user->uid == $suggester->uid) {
		rm_user_activity(
			t('Suggested profile <a href="@url">@profile</a>', array('@url' => url('node/' . $new_node->nid), '@profile' => $new_node->title)),
			$new_node->nid,
			'node',
			$user->uid
		);
	}
	elseif($user->uid > 0 && (empty($suggester) || $suggester->uid == 0)) {
		rm_user_activity(
			t('Suggested profile <a href="@url">@profile</a> but did not enter himself as suggester', array('@url' => url('node/' . $new_node->nid), '@profile' => $new_node->title)),
			$new_node->nid,
			'node',
			$user->uid
		);	
	}
	elseif($user->uid == 0 && !empty($suggester) && $suggester->uid > 0) {
		rm_user_activity(
			t('An anonymous user suggested a profile <a href="@url">@profile</a> and set user @triggeruser as the suggester', array('@triggeruser' => $suggester->mail, '@url' => url('node/' . $new_node->nid), '@profile' => $new_node->title)),
			$new_node->nid,
			'node',
			$suggester->uid
		);	
	}
	
}

/**
 * Implements hook_theme().
 */
function rm_sales_theme() {
	return array(
		'rm_sales_theme_press' => array(
			'template' => 'rm_sales_press_theme',
			'variables' => array(
				'vars' => NULL,
			)
		),
	);
}

function rm_sales_editprofile_access($nid) {
	global $user;
	$profileobject = node_load($nid);
    if(rm_user_is_admin()) return TRUE;
	if(isset($profileobject->field_salesguy[LANGUAGE_NONE][0]['target_id']) && $profileobject->field_salesguy[LANGUAGE_NONE][0]['target_id'] == $user->uid) return TRUE;
	if(isset($profileobject->uid) && $profileobject->uid > 0 && $profileobject->uid == $user->uid) return TRUE;
}