<?php

/**
* Implements hook_menu().
*/
function rm_sales_menu() {
	$items = array();
  $items['suggest'] = array(
    'title' => 'Suggest a participant',
		'page callback' => 'drupal_get_form',
		'page arguments' => array('rm_sales_suggest_form'),
		'access arguments' => array('access content'),
    'type' => MENU_NORMAL_ITEM,
		'weight' => 1,
  );
  $items['admin/sales'] = array(
    'title' => 'Sales',
    'page callback' => 'drupal_get_form',
		'page arguments' => array('rm_sales_profilequeue'),
		'access callback' => 'rm_sales_user_is_salesguy',
    'file' => 'rm_sales.inc',
    'file path' => drupal_get_path('module', 'rm_sales'),
    'type' => MENU_NORMAL_ITEM,
  );
	$items['admin/sales/suggested'] = array(
    'title' => '1. Adopt profile suggestions',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => 0,
  );
	$items['admin/sales/assigned'] = array(
    'title' => '2. Complete profiles',
    'page callback' => 'drupal_get_form',
		'page arguments' => array('rm_sales_profileset'),
		'access callback' => 'rm_sales_user_is_salesguy',
    'file' => 'rm_sales.inc',
    'file path' => drupal_get_path('module', 'rm_sales'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 1,
  );
	$items['admin/sales/manage'] = array(
    'title' => '3. Supervise profiles',
    'page callback' => 'drupal_get_form',
		'page arguments' => array('rm_sales_profilecare'),
		'access callback' => 'rm_sales_user_is_salesguy',
    'file' => 'rm_sales.inc',
    'file path' => drupal_get_path('module', 'rm_sales'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 2,
  );
  $items['admin/sales/addoffertable/%'] = array(
    'title' => 'Sales',
    'page callback' => 'drupal_get_form',
		'page arguments' => array('rm_sales_offertable_add', 3),
		'access callback' => 'rm_sales_user_is_salesguy',
    'file' => 'rm_sales.inc',
    'file path' => drupal_get_path('module', 'rm_sales'),
  );
  $items['admin/sales/addagreement/%/%'] = array(
    'title' => 'Sales',
    'page callback' => 'drupal_get_form',
		'page arguments' => array('rm_sales_agreement_add', 3, 4),
		'access callback' => 'rm_sales_user_is_salesguy',
    'file' => 'rm_sales.inc',
    'file path' => drupal_get_path('module', 'rm_sales'),
  );
  $items['admin/sales/editagreement/%'] = array(
    'title' => 'Sales',
    'page callback' => 'drupal_get_form',
		'page arguments' => array('rm_sales_agreement_edit', 3),
		'access callback' => 'rm_sales_user_is_salesguy',
    'file' => 'rm_sales.inc',
    'file path' => drupal_get_path('module', 'rm_sales'),
  );
  $items['admin/sales/assignprofile/%/%'] = array(
    'title' => 'Sales',
    'page callback' => 'rm_sales_assignprofile',
		'page arguments' => array(3,4),
		'access callback' => 'rm_sales_assignprofile_access',
		'access arguments' => array(3,4),
    'file' => 'rm_sales.inc',
    'file path' => drupal_get_path('module', 'rm_sales'),
  );
  $items['admin/sales/changeprofiletype/%/%'] = array(
    'title' => 'Sales',
    'page callback' => 'rm_sales_changeprofiletype',
		'page arguments' => array(3,4),
		'access callback' => 'rm_sales_user_is_salesguy',
    'file' => 'rm_sales.inc',
    'file path' => drupal_get_path('module', 'rm_sales'),
  );
  $items['admin/sales/%/edit'] = array(
    'title' => 'Sales',
    'page callback' => 'drupal_get_form',
		'page arguments' => array('rm_sales_editprofile', 2),
		'access callback' => 'rm_sales_editprofile_access',
		'access arguments' => array(2),
    'file' => 'rm_sales.inc',
    'file path' => drupal_get_path('module', 'rm_sales'),
  );
  $items['admin/sales/%/delete'] = array(
    'title' => 'Sales',
    'page callback' => 'drupal_get_form',
		'page arguments' => array('rm_sales_deleteprofile', 2),
		'access callback' => 'rm_sales_deleteprofile_access',
		'access arguments' => array(2),
    'file' => 'rm_sales.inc',
    'file path' => drupal_get_path('module', 'rm_sales'),
  );
  $items['admin/sales/%/publish'] = array(
    'title' => 'Sales',
    'page callback' => 'rm_sales_publishprofile',
		'page arguments' => array(2),
		'access callback' => 'rm_sales_publishprofile_access',
		'access arguments' => array(2),
    'file' => 'rm_sales.inc',
    'file path' => drupal_get_path('module', 'rm_sales'),
  );
	return $items;
}

function rm_sales_publishprofile_access($nid) {
	$profileobject = node_load($nid);
	global $user;
	if(isset($profileobject->field_salesguy[LANGUAGE_NONE][0]['target_id']) && $profileobject->field_salesguy[LANGUAGE_NONE][0]['target_id'] == $user->uid) return TRUE;
}

function rm_sales_editprofile_access($nid) {
	$profileobject = node_load($nid);
	global $user;
	if(isset($profileobject->field_salesguy[LANGUAGE_NONE][0]['target_id']) && $profileobject->field_salesguy[LANGUAGE_NONE][0]['target_id'] == $user->uid) return TRUE;
	if(isset($profileobject->uid) && $profileobject->uid > 0 && $profileobject->uid == $user->uid) return TRUE;
}

function rm_sales_deleteprofile_access($nid) {
	$profileobject = node_load($nid);
	global $user;
	if(isset($profileobject->field_salesguy[LANGUAGE_NONE][0]['target_id']) && $profileobject->field_salesguy[LANGUAGE_NONE][0]['target_id'] == $user->uid) return TRUE;
	if(in_array('salesguy', $user->roles) && $profileobject->uid == 0) return TRUE;
}

function rm_sales_user_is_salesguy() {
	global $user;
	return in_array('salesguy', $user->roles) ? TRUE : FALSE;
}

function rm_sales_assignprofile_access($nid, $uid) {
	$userobject = user_load($uid);
	if(!in_array('salesguy', $userobject->roles)) return FALSE;
	$nodeobject = node_load($nid);
	if(isset($nodeobject->type) && $nodeobject->type != 'customer_profile' && $nodeobject->type != 'seller_profile') return FALSE;
	return TRUE;
}

/**
 * Implements a form for suggesting participant profiles
 * @return array
 */
function rm_sales_suggest_form($form, &$form_state) {

	$form = array();

	$form['suggest']['type'] = array(
		'#type' => 'select',
		'#title' => t('Vendor or gastronomy'),
		'#options' => array(
			'seller_profile' => t('Vendor'),
			'customer_profile' => t('Gastronomy'),
		),
		'#default_value' => 'seller_profile',
		'#required' => TRUE,
	);
	
	$form['suggest']['title'] = array(
		'#type' => 'textfield',
		'#title' => t('Name of the vendor or gastronomy'),
		'#attributes' => array(
			'placeholder' => t('Name of the vendor or gastronomy'),
		),
		'#required' => TRUE,
	);
	
	$form['suggest']['locality'] = array(
		'#type' => 'textfield',
		'#title' => t('City'),
		'#attributes' => array(
			'placeholder' => t('City'),
		),
		'#required' => TRUE,
	);
	
	$form['suggest']['thoroughfare'] = array(
		'#type' => 'textfield',
		'#title' => t('Street'),
		'#attributes' => array(
			'placeholder' => t('Street'),
		),
		'#required' => TRUE,
	);
	
	$form['suggest']['postal_code'] = array(
		'#type' => 'textfield',
		'#title' => t('Postal code'),
		'#attributes' => array(
			'placeholder' => t('Zip'),
		),
		'#required' => FALSE,
	);
	
	$form['suggest']['phone'] = array(
		'#type' => 'textfield',
		'#title' => t('Phone'),
		'#attributes' => array(
			'placeholder' => t('Phone'),
		),
		'#required' => FALSE,
	);
	
	$form['suggest']['suggester'] = array(
		'#type' => 'textfield',
		'#title' => t('Your E-Mail'),
		'#attributes' => array(
			'placeholder' => t('Your E-Mail'),
		),
		'#required' => FALSE,
	);
	
	global $user;
	if($user->uid > 0) {
		$form['suggest']['suggester']['#default_value'] = $user->mail;
	}
	
	$form['suggest']['submit'] = array(
		'#type' => 'submit',
		'#value' => t('Suggest'),
	);
	
	return $form;
}

/**
* Implements hook_mollom_form_list().
*/
function rm_sales_mollom_form_list() {
  $forms['rm_sales_suggest_form'] = array(
    'title' => t('Suggest form'),
  );
  return $forms;
}
/**
* Implements hook_mollom_form_info().
*/
function rm_sales_mollom_form_info() {
  $form_info = array(
    'mode' => MOLLOM_MODE_CAPTCHA,
  );
  return $form_info;
}

/**
 * Validation callback for rm_sales_suggest_form().
 * @param $form
 * @param $form_state
 */
function rm_sales_suggest_form_validate($form, &$form_state) {
	if(!empty($form_state['values']['postal_code'])) {
		if(!is_numeric($form_state['values']['postal_code'])) form_set_error('postal_code', t('Please enter a numeric value as postal code'));
	}
	if(!empty($form_state['values']['phone'])) {
		if(!is_numeric($form_state['values']['phone'])) form_set_error('phone', t('Please enter a numeric value as phone number'));
	}
	
}

/**
 * Submit callback for rm_sales_suggest_form().
 * @param $form
 * @param $form_state
 */
function rm_sales_suggest_form_submit($form, &$form_state) {
	
	$new_node = rm_api_create_new_node(
		$form_state['values']['type'], //Type
		$form_state['values']['title'], //Title
		'de', //Language
		0, //Uid of author
		0, //Status
		0, //Suppressed
		0, //Sticky
		0 //Promote
	);
	
	//Store fields
	$new_node->field_address[LANGUAGE_NONE][0] = array(
		'country' => 'de',
		'administrative_area' => NULL,
		'sub_administrative_area' => NULL,
		'locality' => '',
		'dependent_locality' => '',
		'postal_code' => '',
		'thoroughfare' => '',
		'premise' => '',
		'sub_premise' => NULL,
		'organisation_name' => '',
		'name_line' => NULL,
		'first_name' => NULL,
		'last_name' => NULL,
		'data' => NULL,
	);
	if(!empty($form_state['values']['locality'])) $new_node->field_address[LANGUAGE_NONE][0]['locality'] = $form_state['values']['locality'];
	if(!empty($form_state['values']['thoroughfare'])) $new_node->field_address[LANGUAGE_NONE][0]['thoroughfare'] = $form_state['values']['thoroughfare'];
	if(!empty($form_state['values']['postal_code'])) $new_node->field_address[LANGUAGE_NONE][0]['postal_code'] = $form_state['values']['postal_code'];
	if(!empty($form_state['values']['phone'])) {
		$new_node->field_publicphone[LANGUAGE_NONE][0]['number'] = $form_state['values']['phone'];
		$new_node->field_publicphone[LANGUAGE_NONE][0]['country_codes'] = 'de';
	}
	
	if(!empty($form_state['values']['suggester'])) $new_node->field_suggester[LANGUAGE_NONE][0]['value'] = $form_state['values']['suggester'];
	
	//if suggester is sales person, then store him in field_salesguy
	$suggester = user_load_by_mail($form_state['values']['suggester']);
	$enteredbysales = FALSE;

	$new_node->field_salesguy[LANGUAGE_NONE][0]['target_id'] = $suggester->uid;
	
	if(in_array('salesguy', $suggester->roles)) {
		$enteredbysales = TRUE;
		$new_node->sticky = 1;
	}

	node_save($new_node);
	
	if(!$enteredbysales) {
		if(!empty($form_state['values']['suggester'])) {
			drupal_set_message(t('Thank you very much! We will contact @name as soon as possible and let you know when he/she joins us.', array('@name' => $form_state['values']['title'])), 'status');
		}
		else {
			drupal_set_message(t('Thank you very much! We will contact @name as soon as possible.', array('@name' => $form_state['values']['title'])), 'status');
		}
	}
	else {
		drupal_set_message(t('Thank you very much! @name has been entered and assigned to your <a href="@url">sales</a> account.', array('@name' => $form_state['values']['title'], '@url' => 'user/register?destination=admin/sales/assigned')), 'status');
	}
	
	//Log activity
	global $user;
	if($user->uid > 0 && $suggester->uid > 0 && $user->uid != $suggester->uid) {
		rm_user_activity(
			t('Suggested profile <a href="@url">@profile</a> but entered user @targetuser as the suggester', array('@url' => url('node/' . $new_node->nid), '@profile' => $new_node->title, '@targetuser' => $suggester->mail)),
			$new_node->nid,
			'node',
			$user->uid
		);
	}
	elseif($user->uid > 0 && $suggester->uid > 0 && $user->uid == $suggester->uid) {
		rm_user_activity(
			t('Suggested profile <a href="@url">@profile</a>', array('@url' => url('node/' . $new_node->nid), '@profile' => $new_node->title)),
			$new_node->nid,
			'node',
			$user->uid
		);
	}
	elseif($user->uid > 0 && $suggester->uid == 0) {
		rm_user_activity(
			t('Suggested profile <a href="@url">@profile</a> but did not enter himself as suggester', array('@url' => url('node/' . $new_node->nid), '@profile' => $new_node->title)),
			$new_node->nid,
			'node',
			$user->uid
		);	
	}
	elseif($user->uid == 0 && $suggester->uid > 0) {
		rm_user_activity(
			t('An anonymous user suggested a profile <a href="@url">@profile</a> and set user @triggeruser as the suggester', array('@triggeruser' => $suggester->mail, '@url' => url('node/' . $new_node->nid), '@profile' => $new_node->title)),
			$new_node->nid,
			'node',
			$suggester->uid
		);	
	}
	
}